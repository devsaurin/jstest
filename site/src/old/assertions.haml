:textile
  h2. Assertions

  Within each test, you can use any of these functions to check the output of
  your program. If an assertion fails, no further code in that test is run.

  h3. @assertBlock([message, ]callback)@

  Passes if the @callback@ function returns a truthy value. @message@ is an
  optional parameter, as it is for all other assertions, and if given should be
  a string that will be used when printing an error message if the assertion
  fails.

  h3. @assert(boolean[, message])@

  Passes if the expression @boolean@ has a truthy value.

  h3. @assertEqual(expected, actual[, message])@

  Passes if @expected@ and @actual@ are equal. "Equality":/equality.html is
  determined using the @equals()@ method if @expected@ responds to it, and the
  @===@ operator otherwise. This assertion also handles deep-equality of arrays
  and objects, comparing the elements of the object using @equals()@ or @===@
  where appropriate.

  h3. @assertNotEqual(expected, actual[, message])@

  Passes if @expected@ and @actual@ are not equal according to the semantics of
  @assertEqual()@.

  h3. @assertSame(expected, actual[, message])@

  Passes if @expected@ and @actual@ are the same object, i.e. @expected ===
  actual@. @assertNotSame(expected, actual[, message])@ passes if @expected@ and
  @actual@ are not the same object, i.e. @expected !== actual@.

  h3. @assertInDelta(expected, actual, delta[, message])@

  Passes if @|expected - actual| <= delta@. All values must be numbers.

  h3. @assertKindOf(type, object[, message])@

  Passes if @object@ is an instance of @type@. @type@ can be a JavaScript type
  string like @'boolean'@ or @'object'@, or a reference to a class or module.

  h3. @assertMatch(pattern, string[, message])@

  Passes if @string@ matches the regular expression @pattern@. This can also be
  used with any object that responds to @match()@ as the pattern, for example
  @assertMatch(new JS.Range(1,10), 5)@.

  h3. @assertNoMatch(pattern, string[, message])@

  Passes if @pattern@ does not match @string@ (inverse of @assertMatch@).

  h3. @assertNull(object[, message])@

  Passes if @object@ is @null@. @assertNotNull(object[, message])@ passes if
  @object@ is not @null@.

  h3. @assertRespondTo(object, method[, message])@

  Passes if @object@ has a property or method named @method@.

  h3. @assertThrows(error[, error2], callback)@

  Passes if calling the given @callback@ function throws one of the given error
  types, for example @assertThrows(TypeError, function() { null.foo() })@.

  h3. @assertNothingThrown([error, ][message, ]callback)@

  Passes if calling the given @callback@ does not throw an error, for example
  @assertNothingThrown(function() { 1 + 1 })@. You can specify what types of
  errors should be caught, for example
  @assertNothingThrown(TypeError, ReferenceError, function() { 1 + 1 })@;
  if the @callback@ throws any other type of error this will be reported as an
  error rather than a test failure.
